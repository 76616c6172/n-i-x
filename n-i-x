#!/bin/bash
set -e

# Print usage information
if [[ $1 == "" ]] ; then
  echo "usage:"
  echo " nix upgrade (upgrade all packages)"
  echo " nix install <package_name>"
  echo " nix remove <package_name>"
  echo " nix log (show history)"
  echo " nix ls (list installed packages)"
  echo " nix search <package_name> (search for pkgs in the nixpkgs repo)"
  exit 0
fi

if [[ "$1" == "upgrade" ]] ; then
# 0. Update all packages
  n-i-x-upgrade_all_packages
  exit 0
fi

# 0.1 Update a specific package?
# 0.2 mark a specific package to be held back/not updated/locked to a specific version?

if [[ "$1" == "install" ]] ; then
# 1. install new package
  n-i-x-install_new_package $2
  exit 0
fi
if [[ "$1" == "remove" ]] ; then
# 2. delete package
  n-i-x-remove_package $2
  exit 0
fi
if [[ "$1" == "log" ]] ; then
# 3 show history of packages
  nix profile history
  exit 0
fi
if [[ "$1" == "ls" ]] ; then
# 4. list installed packages
  nix profile list
# list_installed_packages.sh
  exit 0
fi
if [[ "$1" == "search" ]] ; then
  # search for packages in the nixpkgs repo
  nix search "nixpkgs#$2"
  exit 0
fi
if [[ "$1" == "shell" ]] ; then
  # drop into a nix shell with specified packages
  INPUT=( "$@" )
  PKGS=()

skip=0
  for e in "${INPUT[@]}" ; do
    if [[ $skip == 0 ]] ; then
      skip=1
      continue
    fi
    PKGS+="nixpkgs#$e "
    echo "$e"
  done
  #echo nix shell $PKGS
  nix shell "$PKGS"
  exit 0
fi
# 6. Install all packages based on manifest?
# nix rebuild or nix build?
#
# Otherwisse use nix properly
nix "$@"
